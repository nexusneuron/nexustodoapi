services:
  nginx:
    build: .\nginx
    image: registry.ubuntudockerserver:5000/nginxwebserver
    volumes:
     - ${APPDATA}\Roaming\Nginx\Nginx-1.27.2\nginx.conf:c:\nginx\nginx-1.27.2\conf\nginx.conf
     - ${APPDATA}\Roaming\Nginx\Nginx-1.27.2\index.html:c:\nginx\enabled-sites\html
     #- ${APPDATA}\Roaming\Nginx\ssl:c:\nginx\ssl
    ports:
     - target: 80
       published: 80
       #protocol: tcp
       #mode: host   
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
       interval: 5s
       timeout: 90s
       retries: 3
       test: CMD powershell -command `
             try { `
              $response = iwr http://localhost/ -UseBasicParsing; `
              if ($response.StatusCode -eq 200) { return 0} `
              else {return 1}; `
             } catch { return 1 }
    networks:
      - nexus_overlay
      #- default

  todoapi:
    #image: ${DOCKER_REGISTRY-}todoapi
    build:
      context: .
      dockerfile: TodoAPI\Dockerfile
    image: registry.ubuntudockerserver:5000/todoapi
    restart: unless-stopped
    volumes:
      - ${APPDATA}\Microsoft\UserSecrets:C:\Users\ContainerUser\AppData\Roaming\Microsoft\UserSecrets:ro
    ports:
      - target: 8080
        published: 5000
        #protocol: tcp
        #mode: ingress

      #- name: web-secured
      #  target: 443
      #  host_ip: 127.0.0.1
      #  published: "8083-9000"
      #  protocol: tcp
      #  app_protocol: https
      #  mode: host
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
       interval: 5s
       timeout: 90s
       retries: 3
       test: CMD powershell -command `
             try { `
              $response = iwr http://localhost/ -UseBasicParsing; `
              if ($response.StatusCode -eq 200) { return 0} `
              else {return 1}; `
             } catch { return 1 }
    networks:
      - nexus_overlay
      #- default
      #nexus_overlay:
      #  ipv4_address: 10.0.1.5

  todoapi_two:
    #image: ${DOCKER_REGISTRY-}todoapi_two
    build:
      context: .
      dockerfile: TodoAPI_Two\Dockerfile
    image: registry.ubuntudockerserver:5000/todoapi_two
    restart: unless-stopped
    volumes:
      - ${APPDATA}\Microsoft\UserSecrets:C:\Users\ContainerUser\AppData\Roaming\Microsoft\UserSecrets:ro
    ports:
      - target: 8080
        published: 5005
        #protocol: tcp
        #mode: ingress

      #- name: web-secured
      #  target: 443
      #  host_ip: 127.0.0.1
      #  published: "8083-9000"
      #  protocol: tcp
      #  app_protocol: https
      #  mode: host
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
       interval: 5s
       timeout: 90s
       retries: 3
       test: CMD powershell -command `
             try { `
              $response = iwr http://localhost/ -UseBasicParsing; `
              if ($response.StatusCode -eq 200) { return 0} `
              else {return 1}; `
             } catch { return 1 }
    networks:
      - nexus_overlay
      #- default      
    

networks:
  nexus_overlay:
    name: nexus_overlay
    external: true
#  nexus_nat:
#    name: nexus_nat
#    internal: true
