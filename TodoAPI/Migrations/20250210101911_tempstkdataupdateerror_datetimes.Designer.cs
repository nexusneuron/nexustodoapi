// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoAPI.Data;

#nullable disable

namespace TodoAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250210101911_tempstkdataupdateerror_datetimes")]
    partial class tempstkdataupdateerror_datetimes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TodoAPI.Models.NexuspayConfirmation", b =>
                {
                    b.Property<string>("TransID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BillRefNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("BusinessShortCode")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("MSISDN")
                        .HasColumnType("longtext");

                    b.Property<string>("OrgAccountBalance")
                        .HasColumnType("longtext");

                    b.Property<string>("ThirdPartyTransID")
                        .HasColumnType("longtext");

                    b.Property<string>("TransAmount")
                        .HasColumnType("longtext");

                    b.Property<string>("TransTime")
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionType")
                        .HasColumnType("longtext");

                    b.HasKey("TransID");

                    b.ToTable("NexuspayConfirmation");
                });

            modelBuilder.Entity("TodoAPI.Models.StkCallback", b =>
                {
                    b.Property<string>("MpesaReceiptNumber")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AccountReference")
                        .HasColumnType("longtext");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CheckoutRequestID")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("MerchantRequestID")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<long?>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionDate")
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionDesc")
                        .HasColumnType("longtext");

                    b.HasKey("MpesaReceiptNumber");

                    b.ToTable("SktCallback");
                });

            modelBuilder.Entity("TodoAPI.Models.TempSTKData", b =>
                {
                    b.Property<string>("merchantID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CallBackURL")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Errorcode")
                        .HasColumnType("longtext");

                    b.Property<string>("Errordesc")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartyB")
                        .HasColumnType("int");

                    b.Property<long?>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.Property<string>("TransTime")
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionDesc")
                        .HasColumnType("longtext");

                    b.Property<string>("accNO")
                        .HasColumnType("longtext");

                    b.Property<int?>("amount")
                        .HasColumnType("int");

                    b.Property<int?>("businessShortcode")
                        .HasColumnType("int");

                    b.Property<long?>("partyA")
                        .HasColumnType("bigint");

                    b.HasKey("merchantID");

                    b.ToTable("TempSTKData");
                });

            modelBuilder.Entity("TodoAPI.Models.TodoItem", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Done")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
