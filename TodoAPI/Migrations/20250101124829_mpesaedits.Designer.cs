// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoAPI.Data;

#nullable disable

namespace TodoAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250101124829_mpesaedits")]
    partial class mpesaedits
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TodoAPI.Models.NexuspayConfirmation", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BillRefNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("BusinessShortCode")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MSISDN")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("OrgAccountBalance")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("TransAmount")
                        .HasColumnType("int");

                    b.Property<string>("TransID")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("TransTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("NexuspayConfirmation");
                });

            modelBuilder.Entity("TodoAPI.Models.StkCallback", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AccountReference")
                        .HasColumnType("longtext");

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CheckoutRequestID")
                        .HasColumnType("longtext");

                    b.Property<string>("MerchantRequestID")
                        .HasColumnType("longtext");

                    b.Property<string>("MpesaReceiptNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("TransactionDate")
                        .HasColumnType("longtext");

                    b.Property<string>("TransactionDesc")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("SktCallback");
                });

            modelBuilder.Entity("TodoAPI.Models.TodoItem", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Done")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
