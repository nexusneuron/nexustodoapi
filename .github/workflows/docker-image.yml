name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    #- name: Setup SSH
   #   run: | 
   #      mkdir -p C:\Users\runneradmin\.ssh && cd C:\Users\runneradmin\.ssh
   #      echo "${{ secrets.SSH_PRIVATE_KEY }}" >>  C:\Users\runneradmin\.ssh\access
      #openssh-portablessh-add C:\Users\runneradmin\.ssh\access
      #Get-ChildItem C:\Users\runneradmin\.ssh

 #   - name: Adding ssh confi
##      run: echo "Host *\r\nHostName ${{ secrets.SSH_HOST }}\r\nUser ${{ secrets.SSH_USER }}\r\nIdentityFile C:\Users\runneradmin\.ssh\access\r\nStrictHostKeyChecking no" >> C:\Users\runneradmin\.ssh\config 

#    - name: Adding Known Hosts
#      run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> C:\Users\runneradmin\.ssh\known_hosts

#    - name: Adding File Permissions
#      run: |
#        icacls "C:\Users\runneradmin\.ssh\" /grant runneradmin:F /t /c /q
#        Get-ChildItem C:\Users\runneradmin\.ssh

#    - name: SSH without action
#      run: |
#         ssh -i C:\Users\runneradmin\.ssh\access "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
#         'hostname'
         
    #- name: Deploy using docker-compose
    #  uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
    #  with:
    #    ORIGIN: ${{ secrets.SSH_HOST }} # example.com || 8.8.8.8
     #   SSHKEY: ${{ secrets.SSH_PRIVATE_KEY }} # ----- BEGIN RSA PRIVATE KEY----- ...
     #   NAME: production
      #  PORT: ${{ secrets.PORT }}
      #  USER: ${{ secrets.SSH_USER }} # admin

   # - name: SSH trial
   #   run: ssh production "echo hehe >> h.txt "
         
    #ssh -i C:\Users\runneradmin\.ssh\access "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
    #"hostname"
  #ssh production hostname 
  #ssh production "docker run -d --name nexustodoapicontainer --restart unless-stopped -p 5000:8080 nexusneurondev/nexustodoapi:latest"

    
      #uses: appleboy/ssh-action@1a8b3784eaa665f677fa114edd5683bb6a6bfaa8
      #with:
        #host: ${{ secrets.SSH_HOST }}
        #username: ${{ secrets.SSH_USER }}
        #key: ${{ secrets.SSH_PRIVATE_KEY }}
        #port: ${{ secrets.PORT }}
        #script: |
        #  powershell.exe        
       #mkdir -p C:\Users\runneradmin\.ssh\access && echo "${{ secrets.SSH_PUBLIC_KEY }}" > C:\Users\runneradmin\.ssh\access.pub   

        
      #docker pull nexusneurondev/nexustodoapiâ€‹ \
      #docker run -d --name nexustodoapicontainer --restart unless-stopped -p 5000:8080 nexusneurondev/nexustodoapi:latest

        
      #rm -f private_key.pem #Remove the private key file after use for security

  
  #"docker pull ${IMAGE_NAME}:${IMAGE_TAG} \
  #&& docker stop live-container \
  #&& docker rm live-container \
  #&& docker run --init -d --name live-container -p 80:3000 ${IMAGE_NAME}:${IMAGE_TAG} \
  #&& docker system prune -af" # remove unused images to free up space
  
    - name: Build the Docker images nexustodoapi
      run: docker build . --file TodoAPI/Dockerfile --tag todoapi

    - name: Build the Docker images nexustodoapi_two
      run: docker build . --file TodoAPI_Two/Dockerfile --tag todoapi_two
      
    #- name: Login to Docker Hub
    #  uses: docker/login-action@v3
    #  with:
     #   username: ${{ vars.DOCKERHUB_USERNAME }}
     #   password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to private registry
      uses: docker/login-action@v3
      with:
          registry: ${{ vars.DOCKER_URL }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_SECRET }}
          
    - name: Tag the Docker image nexustodoapi
      run: docker tag todoapi ${{ vars.DOCKER_TAG }}/todoapi

    - name: Tag the Docker image nexustodoapi_two
      run: docker tag todoapi_two ${{ vars.DOCKER_TAG }}/todoapi_two

    #- name: Push the Docker image nexustodoapi
    #  run: docker push ${{ vars.DOCKER_TAG }}/todoapi:latest

    - name: Push the Docker image nexustodoapi_two
      run: docker push ${{ vars.DOCKER_TAG }}/todoapi_two:latest
