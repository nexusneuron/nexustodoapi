name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    #- name: Setup SSH
      #run: |
       #   mkdir -p ~/.ssh/
        #  echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
         # echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          #chmod 600 ~/.ssh/id_rsa
          #chmod 600 ~/.ssh/id_rsa.pub
          #ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      
    - name: Deploy using docker-compose
      uses: LuisEnMarroquin/setup-ssh-action@v2.0.0
      with:
        ORIGIN: ${{ secrets.SSH_HOST }} # example.com || 8.8.8.8
        SSHKEY: ${{ secrets.SSH_PRIVATE_KEY }} # ----- BEGIN RSA PRIVATE KEY----- ...
        NAME: production
        USER: ${{ secrets.SSH_USER }} # admin
    - run: |
         echo "${{ secrets.SSH_PRIVATE_KEY }}" >  C:\Users\runneradmin\.ssh\id_rsa
         echo "${{ secrets.SSH_PUBLIC_KEY }}" > C:\Users\runneradmin\.ssh\id_rsa.pub
         chmod 600 C:\Users\runneradmin\.ssh\id_rsa
         chmod 600 C:\Users\runneradmin\.ssh\id_rsa.pub
         ssh-keyscan -H ${{ secrets.SSH_HOST }} >> C:\Users\runneradmin\.ssh\known_hosts
         ssh production ls --help
    
      #uses: appleboy/ssh-action@1a8b3784eaa665f677fa114edd5683bb6a6bfaa8
      #with:
        #host: ${{ secrets.SSH_HOST }}
        #username: ${{ secrets.SSH_USER }}
        #key: ${{ secrets.SSH_PRIVATE_KEY }}
        #port: ${{ secrets.PORT }}
        #script: |
        #  powershell.exe
          

      #env: 
         #PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # Reference the private key stored in GitHub Secrets
         #HOST: ${{ secrets.SSH_HOST }}
         #USER: ${{ secrets.SSH_USER }}
      #run: |
        #echo "$PRIVATE_KEY" > private_key.pem #Write the private key to a file
        #chmod 600 private_key.pem # Set the appropriate permissions for the key file

        #ssh -o StrictHostKeyChecking=no -i private_key.pem "$USER@$HOST" \
          #hostname
        
      #docker pull nexusneurondev/nexustodoapiâ€‹ \
      #docker run -d --name nexustodoapicontainer --restart unless-stopped -p 5000:8080 nexusneurondev/nexustodoapi:latest

        
      #rm -f private_key.pem #Remove the private key file after use for security

  
  #"docker pull ${IMAGE_NAME}:${IMAGE_TAG} \
  #&& docker stop live-container \
  #&& docker rm live-container \
  #&& docker run --init -d --name live-container -p 80:3000 ${IMAGE_NAME}:${IMAGE_TAG} \
  #&& docker system prune -af" # remove unused images to free up space

    #- name: Build the Docker images nexustodoapi_two
     # run: docker build . --file TodoAPI_Two/Dockerfile --tag nexustodoapi_two
      
    #- name: Login to Docker Hub
    #  uses: docker/login-action@v3
    #  with:
     #   username: ${{ vars.DOCKERHUB_USERNAME }}
     #   password: ${{ secrets.DOCKERHUB_TOKEN }}
          
   # - name: Tag the Docker image nexustodoapi
    #  run: docker tag nexustodoapi ${{ vars.DOCKERHUB_USERNAME }}/nexustodoapi

   # - name: Tag the Docker image nexustodoapi_two
    #  run: docker tag nexustodoapi_two ${{ vars.DOCKERHUB_USERNAME }}/nexustodoapi_two

   # - name: Push the Docker image nexustodoapi
    #  run: docker push ${{ vars.DOCKERHUB_USERNAME }}/nexustodoapi:latest

   # - name: Push the Docker image nexustodoapi_two
   #   run: docker push ${{ vars.DOCKERHUB_USERNAME }}/nexustodoapi_two:latest
